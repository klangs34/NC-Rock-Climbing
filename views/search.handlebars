
    <nav class="white" role="navigation">
        <div class="nav-wrapper container">
            <ul class="right">
                <li><a href="/settings">Settings</a></li>
                <li><a href="/logout">Logout</a></li>
            </ul>
        </div>
    </nav>
    <div id="index-banner" class="parallax-container">
    <div class="section no-pad-bot">
      <div class="container">
        <br><br>
        <h1 class="header center amber-text text-lighten-2 bannerfont">RockHill</h1>
        <div class="row center">
          <h5 class="header col s12 amber-text text-lighten-4">Find rock-climbing locations near you</h5>
        </div>
        <div class="row center">
          <div class="input-field col s12 m4 offset-m4 amber-text">
            <i class="material-icons prefix">textsms</i>
            <input type="text" id="city-input" class="white-text">
            <label for="city-input"></label>
          </div>      
        </div>
        <br><br>
      </div>
    </div>
    <div class="parallax"><img src="../img/banner.jpg" alt="Unsplashed background img 1"></div>
  </div>

        <!--The div element for the map -->
        <div id="map" class="container" style="margin-bottom: 40px;"></div>            

    
     <div class="container">
    <div class="section">

      <!--   Icon Section   -->
      <div class="row">
        <div id="search-results" class="row">
          <!-- search results go here -->
        </div>
      </div>

    </div>
  </div>

      <!--  Scripts-->
    <script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <script src="../js/materialize.js"></script>
    <script src="../js/init.js"></script>

    <script>
      function deleteSavedRoute(id) {
        $.ajax({
        url: '/api/delete-route/' + id,
        type: 'DELETE',
        success: function(result) {
            // Do something with the result
            console.log(result);
        }
        });
      }
    </script>

    <script>
      var place;
        // Initialize and add the map
        function initMap(lat, lng, routes) {
        //start with a clean slate each search
        $('#search-results').empty();
        //console.log(routes);
        const map = new google.maps.Map(document.getElementById("map"), {zoom: 10, center: {lat: lat, lng: lng}});
        //console.log(map);
        const markers = [];
        const infoWindows = [];

        routes.forEach((route = [], index) => {
            const position = {lat: route.lat || latitude, lng: route.lng || longitude};
            //console.log(route);
            //console.log(position);
            const marker = new google.maps.Marker({position: position, map: map, label: index});
            markers.push(marker);

            //console.log(route.img)

            const infoWincontent = document.createElement("div");
            const line1 = document.createElement("p");
            const line2 = document.createElement("p");
            line1.textContent = route.name + ":  lat: " + route.lat + ", long: " + route.lng;
            line2.textContent = "difficulty: " + route.difficulty + ", rating: " + route.rating;

            infoWincontent.appendChild(line1);
            infoWincontent.appendChild(line2);
            

            //console.log(line1);
            //console.log(line2);
            const infowin = new google.maps.InfoWindow({content: infoWincontent});
            //console.log(markers);

            marker.addListener("click", () => {
                infowin.open(map, marker);
                //infowin.appendChild(line3);
            });

          //search result query
          let imgURL;
          if(route.img === ''){
            imgURL = "https://via.placeholder.com/255.png/09f/fff"
          } else {
            imgURL = route.img;
          }
          const imgDiv = $('<div id="imgDiv" class="col s12 m3" style="min-width: 250px; min-height: 400px; max-width: 250px; max-height: 400px;">').html(
            `<div class="card">
                <div class="card-image">
                    <img src=${imgURL}  style="min-width: 225px; min-height: 225px; max-width: 225px; max-height: 225px;" />
                    <span class="card-title" >${route.name}</span>
                    <a class="btn-floating halfway-fab waves-effect waves-light red">
                      <i id=${index} class="material-icons"
                      data-img=${imgURL} data-route=${route.name} data-name="${route.name}"
                      data-difficulty="${route.difficulty}" data-rating=${route.rating}
                      data-lat=${route.lat} data-lng=${route.lng}>add</i></a>
                </div>
                <div class="card-content">
                    <p>Name: ${route.name} </p>
                    <p>Difficulty: ${route.difficulty} </p>
                    <p>Rating: ${route.rating} </p>
                </div>
            </div>`
          )
          
        $('#search-results').append(imgDiv);

        });

        $('#search-results').prepend('<h4 class="header center amber-text">Search Results</h4>');

      }

    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDa0VYRLVZSiVi2MxcaF-2iORHEBcV0dHM&callback=initMap">
    </script>

      <div class="parallax-container valign-wrapper">
        <div class="section no-pad-bot">
        </div>
        <div class="parallax"><img src="../img/shiprock.jpg" alt="Unsplashed background img 2"></div>
     </div>

    <script>
        $('#city-input').on('keypress', function(e){
            place = e.target.value;
            var keycode = (e.keyCode ? event.keyCode : event.Which);
            if(keycode == '13') {      
            $.get(`/api/routes/locate/${place}`, data => {
              //console.log(data);
              const latitude = parseFloat(data.routes[0].lat);
              const longitude = parseFloat(data.routes[0].lng);
              //console.log(latitude);
              //console.log(longitude);
              const routes = [];
              const routesRaw = data.routes;

              routesRaw.forEach(routeRaw => {
                  const route = {
                      name: routeRaw.name,
                      difficulty: routeRaw.difficulty,
                      rating: routeRaw.rating,
                      lat: routeRaw.lat,
                      lng: routeRaw.lng,
                      img: routeRaw.img
                  };

                  routes.push(route);
              });
              //console.log(routes);
              initMap(latitude, longitude, routes);
            });
        };
        
      })
        var dataId;
       $(document).on('click', '.material-icons', (e) => {
         //console.log(e.target.getAttribute('data-name'));
         var state = e.target.textContent;
         if (state === "add") {
         $.post('/api/save-route', {
          name: e.target.getAttribute('data-name'),
          difficulty: e.target.getAttribute('data-difficulty'),
          rating: e.target.getAttribute('data-rating'),
          lat: e.target.getAttribute('data-lat'),
          lng: e.target.getAttribute('data-lng'),
          city: place,
          img: e.target.getAttribute('data-img')
        }).then(data => {
          console.log(data);
          e.target.textContent = "beenhere"
          dataId = data.id;
        })
        } else {
          deleteSavedRoute(dataId);
          e.target.textContent = "add";
        }
      })

      
    </script>